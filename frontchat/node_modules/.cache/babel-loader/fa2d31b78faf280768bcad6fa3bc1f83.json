{"ast":null,"code":"import _regeneratorRuntime from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function postService(_x, _x2, _x3) {\n  return _postService.apply(this, arguments);\n}\n\nfunction _postService() {\n  _postService = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(route, body, headers) {\n    var response, responseJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(route, {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            responseJson = _context.sent;\n            return _context.abrupt(\"return\", responseJson);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _postService.apply(this, arguments);\n}\n\nexport function getService(_x4, _x5) {\n  return _getService.apply(this, arguments);\n}\n\nfunction _getService() {\n  _getService = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(route, headers) {\n    var response, responseJson;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(route, {\n              method: 'GET',\n              headers: headers\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.json();\n\n          case 6:\n            responseJson = _context2.sent;\n            return _context2.abrupt(\"return\", responseJson);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n  return _getService.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/src/services/services.js"],"names":["postService","route","body","headers","fetch","method","JSON","stringify","response","json","responseJson","alert","getService"],"mappings":";;AAAA,gBAAsBA,WAAtB;AAAA;AAAA;;;;;2BAAO,iBAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBC,KAAK,CACtBH,KADsB,EACf;AACHI,cAAAA,MAAM,EAAE,MADL;AAEHF,cAAAA,OAAO,EAAEA,OAFN;AAGHD,cAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHH,aADe,CAF3B;;AAAA;AAEKM,YAAAA,QAFL;AAAA;AAAA,mBAS0BA,QAAQ,CAACC,IAAT,EAT1B;;AAAA;AASKC,YAAAA,YATL;AAAA,6CAUQA,YAVR;;AAAA;AAAA;AAAA;AAYCC,YAAAA,KAAK,aAAL;;AAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBP,gBAAsBC,UAAtB;AAAA;AAAA;;;;;2BAAO,kBAA0BX,KAA1B,EAAiCE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBC,KAAK,CACtBH,KADsB,EACf;AACHI,cAAAA,MAAM,EAAE,KADL;AAEHF,cAAAA,OAAO,EAAEA;AAFN,aADe,CAF3B;;AAAA;AAEKK,YAAAA,QAFL;AAAA;AAAA,mBAQ0BA,QAAQ,CAACC,IAAT,EAR1B;;AAAA;AAQKC,YAAAA,YARL;AAAA,8CASQA,YATR;;AAAA;AAAA;AAAA;AAWCC,YAAAA,KAAK,cAAL;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function postService(route, body, headers) {\n    try {\n        let response = await fetch(\n            route, {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify(body)\n            }\n        );\n        let responseJson = await response.json();\n        return responseJson;\n    } catch (error) {\n        alert(error);\n    }\n}\n\nexport async function getService(route, headers) {\n    try {\n        let response = await fetch(\n            route, {\n                method: 'GET',\n                headers: headers\n            }\n        );\n        let responseJson = await response.json();\n        return responseJson;\n    } catch (error) {\n        alert(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}