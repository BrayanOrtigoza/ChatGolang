{"ast":null,"code":"import _classCallCheck from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/src/components/message/index2.js\";\nimport React, { Component } from 'react';\nimport fecha from 'fecha';\nimport Socket from \"../socket/socket\";\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n    _this.state = {\n      body: '',\n      arrayMessage: [],\n      connected: true\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        arrayMessage: this.props.messages\n      }, function () {\n        return _this2.setChannel();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ws = new WebSocket('ws://10.10.101.155:4000');\n      var socket = this.socket = new Socket(ws);\n      socket.on('connect', this.onConnect.bind(this));\n      socket.on('disconnect', this.onDisconnect.bind(this));\n      socket.on('message add', this.onMessageAdd.bind(this));\n    }\n  }, {\n    key: \"onConnect\",\n    value: function onConnect() {\n      this.setState({\n        connected: true\n      });\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      this.setState({\n        connected: false\n      });\n    } // Sets the channel the user wants to talk to\n\n  }, {\n    key: \"setChannel\",\n    value: function setChannel() {\n      console.log(this.props.id_channel);\n      this.socket.emit('message subscribe', {\n        channelId: this.props.id_channel\n      });\n    }\n  }, {\n    key: \"onMessageAdd\",\n    value: function onMessageAdd(message) {\n      // this.state.arrayMessage.push(message);\n      var newArrayMessage = Object.assign(this.state.arrayMessage);\n      newArrayMessage.push(message);\n      this.setState({\n        arrayMessage: newArrayMessage\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"mesgs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msg_history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.arrayMessage.map(function (element, index) {\n        var createdAt = fecha.format(new Date(element.createdAt), 'DD/MM HH:mm:ss');\n\n        if (element.id_people_message === _this3.props.id_people) {\n          return React.createElement(Message, {\n            key: index,\n            id_peoplemessage: element.id_people_message,\n            id_people: _this3.state.id_people,\n            createdAt: element.createdAt,\n            author: element.author,\n            message: element.message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"div\", {\n            className: \"outgoing_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"sent_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"time_date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, _this3.props.author), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, _this3.props.message), React.createElement(\"span\", {\n            className: \"time_date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, createdAt)));\n        }\n      })), React.createElement(\"div\", {\n        className: \"type_msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input_msg_write\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"write_msg\",\n        placeholder: \"Escribe Un Mensaje\",\n        value: this.state.body,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            body: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.MakeMessage();\n        },\n        className: \"msg_send_btn\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-paper-plane-o\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nexport default Message;","map":{"version":3,"sources":["/home/developermensajeros/Documentos/Go/src/Chat3.0/frontchat/src/components/message/index2.js"],"names":["React","Component","fecha","Socket","Message","props","state","body","arrayMessage","connected","setState","messages","setChannel","ws","WebSocket","socket","on","onConnect","bind","onDisconnect","onMessageAdd","console","log","id_channel","emit","channelId","message","newArrayMessage","Object","assign","push","map","element","index","createdAt","format","Date","id_people_message","id_people","author","e","target","value","MakeMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fecha from 'fecha';\nimport Socket from \"../socket/socket\";\n\nclass Message extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            body: '',\n            arrayMessage:[],\n            connected: true\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            arrayMessage: this.props.messages\n        },()=> this.setChannel());\n    }\n\n    componentDidMount() {\n        let ws = new WebSocket('ws://10.10.101.155:4000')\n        let socket = this.socket = new Socket(ws);\n        socket.on('connect', this.onConnect.bind(this));\n        socket.on('disconnect', this.onDisconnect.bind(this));\n        socket.on('message add', this.onMessageAdd.bind(this));\n    }\n\n    onConnect() {\n        this.setState({connected: true});\n    }\n\n    onDisconnect() {\n        this.setState({connected: false});\n    }\n\n    // Sets the channel the user wants to talk to\n    setChannel() {\n        console.log(this.props.id_channel)\n        this.socket.emit('message subscribe', {channelId: this.props.id_channel});\n    }\n\n\n\n    onMessageAdd(message) {\n        // this.state.arrayMessage.push(message);\n        const newArrayMessage = Object.assign(this.state.arrayMessage);\n        newArrayMessage.push(message);\n\n        this.setState({\n            arrayMessage: newArrayMessage\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"mesgs\">\n                <div className=\"msg_history\">\n                    {this.state.arrayMessage.map((element, index) => {\n                        let createdAt = fecha.format(new Date(element.createdAt), 'DD/MM HH:mm:ss');\n                        if (element.id_people_message === this.props.id_people) {\n\n                        return (<Message\n                                key={index}\n                                id_peoplemessage={element.id_people_message}\n                                id_people={this.state.id_people}\n                                createdAt={element.createdAt}\n                                author={element.author}\n                                message={element.message}\n                            />\n                        )\n                    }else {\n                            return(\n                                <div  className=\"outgoing_msg\">\n                                        <div className=\"sent_msg\">\n                                            <span className=\"time_date\">{this.props.author}</span>\n                                            <p>{this.props.message}</p>\n                                            <span className=\"time_date\">{createdAt}</span></div>\n                                    </div>\n                                )\n                        }\n                    })}\n                </div>\n                <div className=\"type_msg\">\n                    <div className=\"input_msg_write\">\n                        <input type=\"text\" className=\"write_msg\" placeholder=\"Escribe Un Mensaje\"\n                               value={this.state.body}\n                               onChange={(e) => this.setState({\n                                   body: e.target.value\n                               })}\n                        />\n                        <button onClick={()=>this.MakeMessage()} className=\"msg_send_btn\" type=\"button\"><i className=\"fa fa-paper-plane-o\"\n                                                                                                           aria-hidden=\"true\"/></button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}